plugins {
    id 'com.android.library' version '7.0.3' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.0' apply false
    id 'xyz.tynn.android.maven' version '0.2.1' apply false
    id 'com.github.ben-manes.versions' version '0.39.0'
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

subprojects {
    group = 'xyz.tynn.hoppa'

    plugins.withId('com.android.library') {
        project.apply from: "$rootDir/android.gradle"
        project.apply plugin: 'xyz.tynn.android.sources'
        project.apply plugin: 'xyz.tynn.android.maven'
    }

    plugins.withId('org.jetbrains.kotlin.android') {
        project.apply from: "$rootDir/kotlin.gradle"
    }

    plugins.withId('org.jetbrains.kotlin.jvm') {
        project.apply from: "$rootDir/kotlin.gradle"
        project.apply plugin: 'maven-publish'
        java.withSourcesJar()
        publishing.publications {
            kotlinJvm(MavenPublication) {
                from components.java
            }
        }
    }

    plugins.withId('maven-publish') {
        project.apply from: "$rootDir/publish.gradle"
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }
}

dependencyUpdates {
    def isNonStable = { String version ->
        ['alpha', 'beta', 'dev', 'rc', 'cr', 'm', 'preview', 'b', 'ea', 'eap'].any {
            version ==~ /(?i).*[.-]${it}[.\d-+]*.*/
        }
    }
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
    gradleReleaseChannel = 'current'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
